
compositor_node HdrRenderingNode
{
	texture rt0			target_width target_height PFG_RGBA16_FLOAT msaa_auto explicit_resolve
	texture oldLumRt	           1             1 PFG_R16_FLOAT depth_pool 0 keep_content

	target rt0
	{
		pass render_scene
		{
			load
			{
				all				clear
				// clear_colour	0.2 0.4 0.6 1
				clear_colour	6.667 13.333 20 1
				clear_colour	13.333 26.667 40 1
			}
			store
			{
				depth			dont_care
				stencil			dont_care
			}
			//lod_update_list	off					//Turn Lod off?
			//shadows				ShadowMapDebuggingShadowNode
			shadows  SR3_Shadows
			overlays			off

			profiling_id "Main Render"
		}
	}

	//Initialize lumRt1 at startup, to avoid NaNs.
	target oldLumRt
	{
		pass clear
		{
			num_initial 1
			colour_value 0.01 0.01 0.01 1
		}
	}

	out 0 rt0
	out 1 oldLumRt
}

compositor_node HdrMsaaResolve
{
	in 0 hdr_msaa_rt
	in 1 oldLumRt

	texture resolvedRt target_width target_height PFG_RGBA16_FLOAT depth_pool 0

	target resolvedRt
	{
		pass render_quad
		{
			load { all dont_care }
			material HDR/Resolve_4xFP32_HDR_Box
			input 0 hdr_msaa_rt
			input 1 oldLumRt

			profiling_id "Resolve HDR MSAA"
		}
	}

	out 0 resolvedRt
}

compositor_node HdrPostprocessingNode
{
	in 0 rt0
	in 1 lumRt1
	in 2 rt_output

	//For maximum quality use these as FLOAT16_RGBA, however they're slower on
	//AMD cards (0.748ms slower on AMD Radeon HD 7770 at 1920x1080).
	//texture rtBlur0	256 256 PFG_RGBA16_FLOAT	depth_pool 0
	//texture rtBlur1	256 256 PFG_RGBA16_FLOAT	depth_pool 0

	texture rtBlur0	256 256 PFG_R10G10B10A2_UNORM	depth_pool 0
	texture rtBlur1	256 256 PFG_R10G10B10A2_UNORM	depth_pool 0

	texture lumRt0	  1   1 PFG_R16_FLOAT	depth_pool 0
	//texture lumRt1  1   1 PFG_R16_FLOAT	depth_pool 0
	texture rtIter0	 64  64 PFG_R16_FLOAT	depth_pool 0
	texture rtIter1	 16  16 PFG_R16_FLOAT	depth_pool 0
	texture rtIter2	  4   4 PFG_R16_FLOAT	depth_pool 0

	// Calculate luminosity
	target rtIter0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/DownScale01_SumLumStart
			input		0	rt0

			profiling_id "Start Luminance"
		}
	}

	target rtIter1
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/DownScale02_SumLumIterative
			input		0	rtIter0

			profiling_id "Iterate Luminance"
		}
	}

	target rtIter2
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/DownScale02_SumLumIterative
			input		0	rtIter1

			profiling_id "Iterate Luminance"
		}
	}

	target lumRt0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/DownScale03_SumLumEnd
			input		0	rtIter2
			input		1	lumRt1

			profiling_id "Obtain Final Luminance value"
		}
	}

	target lumRt1
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	Ogre/Copy/1xFP32
			input		0	lumRt0

			profiling_id "Copy Luminance for avg next frame"
		}
	}

	// Perform Bloom
	target rtBlur0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BrightPass_Start
			input		0	rt0
			input		1	lumRt0

			profiling_id "Bloom (Start)"
		}
	}

	target rtBlur1
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurH
			input		0	rtBlur0

			profiling_id "Bloom (Blur Horizontal)"
		}
	}

	target rtBlur0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurV
			input		0	rtBlur1

			profiling_id "Bloom (Blur Vertical)"
		}
	}

	target rtBlur1
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurH
			input		0	rtBlur0

			profiling_id "Bloom (Blur Horizontal)"
		}
	}

	target rtBlur0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurV
			input		0	rtBlur1

			profiling_id "Bloom (Blur Vertical)"
		}
	}

	target rtBlur1
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurH
			input		0	rtBlur0

			profiling_id "Bloom (Blur Horizontal)"
		}
	}

	target rtBlur0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurH
			input		0	rtBlur1

			profiling_id "Bloom (Blur Horizontal)"
		}
	}

	target rtBlur1
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurH
			input		0	rtBlur0

			profiling_id "Bloom (Blur Horizontal)"
		}
	}

	target rtBlur0
	{
		pass render_quad
		{
			load		{ all dont_care }
			material	HDR/BoxBlurH
			input		0	rtBlur1

			profiling_id "Bloom (Blur Horizontal)"
		}
	}

	target rt_output
	{
		pass render_quad
		{
			load		{ colour dont_care }
			store
			{
				//Required by Metal as the overlays in the next pass will break the render encoder,
				//causing this pass to be resolved and then the overlays would render over a black
				//background (unfortunately, this also causes a performance hit).
				colour store
			}
			material	HDR/FinalToneMapping
			input		0	rt0
			input		1	lumRt0
			input		2	rtBlur0

			profiling_id "HDR Final ToneMapping"
		}
	}

	out 0 rt_output
}

compositor_node HdrRenderUi
{
	in 0 rt_output

	target rt_output
	{
		pass render_scene
		{
			lod_update_list	off

			//Render Overlays
			overlays	on
			rq_first	254
			rq_last		255

			profiling_id "Overlays"
		}
	}

	//This output is not always used.
	out 0 rt_output
}

workspace HdrWorkspace
{
	connect HdrRenderingNode 0		HdrPostprocessingNode 0
	connect HdrRenderingNode 1		HdrPostprocessingNode 1
	connect_output					HdrPostprocessingNode 2
	connect	HdrPostprocessingNode 0	HdrRenderUi 0
}

workspace HdrWorkspaceMsaa
{
	connect HdrRenderingNode 0 HdrMsaaResolve 0
	connect HdrRenderingNode 1 HdrMsaaResolve 1
	connect HdrMsaaResolve 0 HdrPostprocessingNode 0
	connect HdrRenderingNode 1 HdrPostprocessingNode 1
	connect_output HdrPostprocessingNode 2
	connect HdrPostprocessingNode 0 HdrRenderUi 0
}


//  start of  Editor only

//  üèóÔ∏è ed rtt 0  for roadDensity.png
//------------------------------------------------------------------------------------
compositor_node Rtt_RoadDens
{
	in 0 rt_output

	target rt_output
	{
		pass render_scene
		{
			profiling_id "RTT 0 road dens"
			identifier	10101

			load
			{
				all				clear
				clear_colour	1 0 0 1  // red
			}
			store
			{
				colour	store
				depth	store
				stencil	store
			}
			//  todo: depth only?  add RV_Objects but black,  add smooth outline? ..
			visibility_mask  0x00004020  // RV_EdRoadDens + RV_Objects
			// visibility_mask  0x00004000  // RV_EdRoadDens
			
			rq_first  1  // road, objects
			rq_last   72

			overlays	off
			enable_forwardplus no
		}
	}
}

//  üèóÔ∏è ed rtt 1  for road.png minimap preview
//------------------------------------------------------------------------------------
compositor_node Rtt_RoadPreview
{
	in 0 rt_output

	target rt_output
	{
		pass render_scene
		{
			profiling_id "RTT 1 road prv"
			identifier	11101

			load
			{
				all				clear
				clear_colour	0 0 0 0  // alpha
			}
			store
			{
				colour	store
				depth	store
				stencil	store
			}
			visibility_mask  0x00008000  // RV_EdRoadPreview

			rq_first  70  // road
			rq_last	  72

			overlays	off
			enable_forwardplus no
		}
	}
}

//  üèóÔ∏è ed rtt 2  terrain.jpg minimap preview
//------------------------------------------------------------------------------------
compositor_node Rtt_Terrain
{
	in 0 rt_output
	// in 1 dynamic_cubemap  // todo..

	texture depthBuffer  target_width target_height PFG_D32_FLOAT
	texture rtt_first    target_width target_height target_format
	texture rtt_refract  target_width target_height target_format
	texture rtt_final    target_width target_height target_format

	rtv rtt_first
	{
		depth_stencil	depthBuffer
	}
	rtv rtt_refract
	{
		depth_stencil	depthBuffer
	}
	rtv rtt_final
	{
		depth_stencil	depthBuffer
	}


	target rtt_first
	{
		//  [Terrain Render]  --------
		pass render_scene
		{
			profiling_id "RTT 2 Terrain"
			identifier	22201

			load
			{
				all				clear
				// clear_depth  1.0
				clear_colour	0.2 0.4 0.6 1
			}
			store
			{
				colour	store_or_resolve
				depth	store
				stencil	dont_care
			}

			// expose dynamic_cubemap

			visibility_mask  0x00000024  // RV_Terrain + RV_Objects
			rq_last		20

			overlays	off
			//- shadows		SR3_Shadows  //** ed
			lod_bias	2.0
			enable_forwardplus no
		}
	}

	target rtt_refract
	{
		pass render_quad
		{
			profiling_id "RTT 2 b4 refract"
			identifier	22212

			//  preserve depth buffer
			load {  colour dont_care  }
			material Ogre/Copy/4xFP32
			input 0 rtt_first
		}

		//  water, Pass with refractive objects
		pass render_scene
		{
			profiling_id "RTT 2 Refract"
			identifier	22202

			load {  all load  }
			store
			{
				colour	store_or_resolve
				depth	dont_care
				stencil	dont_care
			}

			// expose demo_dynamic_cubemap

			visibility_mask  0x00000002
			rq_first  210
			rq_last   212

			overlays	off
			use_refractions	depthBuffer rtt_first
		}
	}

	target rt_output
	{
		pass render_quad
		{
			profiling_id "RTT 2 Final"
			identifier	22299
			
			load {  colour dont_care  }
			material Ogre/Copy/4xFP32
			input 0 rtt_refract
		}
	}
}


//  üßä 3d preview  other scene  single object,veget
//------------------------------------------------------------------------------------
compositor_node Rtt_PreView3D
{
	in 0 rt_output

	target rt_output
	{
		pass render_scene
		{
			profiling_id "RTT 3d preview"
			identifier	12345

			load
			{
				all				clear
				// clear_colour	0 0 0 0  // black, transparent?
				clear_colour	0.2 0.35 0.45 1  // sky blue
			}
			store
			{
				colour	store
				depth	store
				stencil	store
			}

			visibility_mask  0x000001FF  // all
			rq_first  0
			rq_last	  199  // before RQ_OVERLAY

			overlays	off
			// shadows	SR3_Shadows  // no-
			enable_forwardplus no
		}
	}
}



//  üåí shadows  - HQ, only for ed preview cam
//------------------------------------------------------------------------------------
compositor_node_shadow SR3_Shadows
{
	technique pssm

	//**  shadows par
	// texture atlas 3072 2048 PFG_D32_FLOAT  // medium 2k
	// texture atlas 6144 4096 PFG_D32_FLOAT  // high 4k
	texture atlas 12288 8192 PFG_D32_FLOAT  // ultra high 8k

	num_splits		3
	pssm_lambda		0.95
	shadow_map 0 atlas uv 0.000000000000000 0.0 0.666666666666667 1.0 light 0 split 0
	shadow_map 1 atlas uv 0.666666666666667 0.0 0.333333333333333 0.5 light 0 split 1
	shadow_map 2 atlas uv 0.666666666666667 0.5 0.333333333333333 0.5 light 0 split 2

	target atlas
	{
		pass clear
		{
			colour_value 1 1 1 1
			identifier	77000
		}
	}

	shadow_map_target_type directional
	{
		shadow_map 0 1 2
		{
			pass render_scene
			{
				profiling_id "Shadows ed prv"
				identifier	77077

				rq_last		219
			}
		}
	}
}

//  end of  Editor only


//  üîÆ cube reflections
//------------------------------------------------------------------------------------------------------------------------------------------
abstract target cubemap_target
{
	pass render_scene
	{
		profiling_id "Cube Reflect"
		identifier	30001

		load
		{
			all				clear
			// clear_colour	1 1 0 1  // test yellow
			clear_colour	0.2 0.4 0.8 1  // skyblue-
		}
		store
		{
			// colour	store
			depth			dont_care
			stencil			dont_care
		}

		expose cubemap

		visibility_mask  0x0000042D  // 1 rd 4 ter 8 vgt 20 obj  400 sky
		// visibility_mask  0x0000046D  // + 40 grass
		rq_last	  199

		overlays		off
		camera_cubemap_reorient true
		// shadows		SR3_Shadows
		// ^ crashes ..
		// todo: use that from code, not SR3_Shadows from here
		enable_forwardplus no  //?
	}

	// pass generate_mipmaps  // ?
	// {
	// 	profiling_id "Cube Reflect Mipmaps"
	// 	identifier 33006

	// 	// mipmap_method compute_hq
	// }
}

compositor_node CubemapNode
{
	in 0 cubemap

	texture tmpCubemap target_width target_height target_format cubemap mipmaps 0

	target tmpCubemap +X : cubemap_target { }
	target tmpCubemap -X : cubemap_target { }
	target tmpCubemap +Y : cubemap_target { }
	target tmpCubemap -Y : cubemap_target { }
	target tmpCubemap +Z : cubemap_target { }
	target tmpCubemap -Z : cubemap_target {
		pass ibl_specular
		{
			identifier	30011
			input tmpCubemap
			output cubemap
	}	}
}


//  ü™û planar Reflections  Water üåä fluids
//------------------------------------------------------------------------------------
compositor_node PlanarReflectNode
{
	in 0 rt_renderwindow

	target rt_renderwindow
	{
		pass render_scene
		{
			profiling_id "Planar Reflection"
			identifier 40001

			load
			{
				all				clear
				clear_colour	0.2 0.4 0.6 1
			}
			store
			{
				colour	store_or_resolve
				depth	dont_care  //?
				stencil	dont_care
			}

			visibility_mask  0x0000022D  // 1 rd 4 ter 8 vgt 20 obj  200 sky
			rq_last		209
			overlays	off
			//shadows  SR3_Shadows  // no-
		}

		pass generate_mipmaps
		{
			profiling_id "Planar Reflect Mipmaps"
			identifier 40006

			mipmap_method compute_hq
		}
	}
}

workspace PlanarReflections
{
	connect_output PlanarReflectNode 0
}


//------------------------------------------------------------------------------------
//  üèóÔ∏è ed rtt 3  cam preview  normal all OLD
compositor_node Rtt_View3D_Old
{
	in 0 rt_output

	target rt_output
	{
		pass render_scene
		{
			profiling_id "RTT 3 view all"
			identifier	33301

			load
			{
				all				clear
				clear_colour	0 0 0 1  // black
			}
			store
			{
				colour	store
				depth	store
				stencil	store
			}

			visibility_mask  0x000001FF  // normal
			rq_first  0
			rq_last	  209  // before RQ_OVERLAY

			overlays	off
			shadows		SR3_Shadows  //! rem-
			// todo? use that from code, not SR3_Shadows from here
			// enable_forwardplus no  //-
			lod_bias	2.0
		}
	}
}

//------------------------------------------------------------------------------------
//  üèóÔ∏è ed rtt 3  cam preview  normal all
//------------------------------------------------------------------------------------------------------------------------------------------
compositor_node Rtt_View3D
{
	in 0 rt_output
	// in 1 dynamic_cubemap  // todo..

	texture depthBuffer  target_width target_height PFG_D32_FLOAT
	texture rtt_first    target_width target_height target_format
	texture rtt_refract  target_width target_height target_format
	texture rtt_final    target_width target_height target_format

	rtv rtt_first
	{
		depth_stencil	depthBuffer
	}
	rtv rtt_refract
	{
		depth_stencil	depthBuffer
	}
	rtv rtt_final
	{
		depth_stencil	depthBuffer
	}


	target rtt_first
	{
		//  [Main Render]  --------
		pass render_scene
		{
			profiling_id "RTT 3 view Main"
			identifier	33301

			execution_mask			0xff
			viewport_modifier_mask	0xff

			load
			{
				all				clear
				clear_depth  1.0
				clear_colour	0.2 0.4 0.6 1
			}
			store
			{
				colour	store_or_resolve
				depth	store
				stencil	dont_care
			}

			// expose dynamic_cubemap

			visibility_mask  0x000011FD   // set later  RV_MaskGameAll

			rq_last		80

			overlays	off
			shadows		SR3_Shadows  //** ed
			lod_bias	2.0
		}
	}

	target rtt_refract
	{
		pass render_quad
		{
			profiling_id "RTT 3 b4 refract"
			identifier	33312

			//  preserve depth buffer
			load {  colour dont_care  }
			material Ogre/Copy/4xFP32
			input 0 rtt_first
		}

		//  water, Pass with refractive objects
		pass render_scene
		{
			profiling_id "RTT 3 view Refract"
			identifier	33302

			load {  all load  }
			store
			{
				colour	store_or_resolve
				depth	dont_care
				stencil	dont_care
			}

			// expose demo_dynamic_cubemap

			visibility_mask  0x00000002
			rq_first  210
			rq_last   212

			overlays	off
			use_refractions	depthBuffer rtt_first
		}

	}


	target rtt_final
	{
		pass render_quad
		{
			profiling_id "RTT 3 b4 after"
			identifier	33314

			//  preserve depth buffer
			load {  colour dont_care  }
			material Ogre/Copy/4xFP32
			input 0 rtt_refract
		}

		//  [Main Render 2]  --------
		pass render_scene
		{
			profiling_id "RTT 3 view After"
			identifier	33304

			execution_mask			0xff
			viewport_modifier_mask	0xff

			load {  all load  }
			store
			{
				colour	store
				depth	store  //-
				stencil	dont_care
			}

			//expose dynamic_cubemap

			visibility_mask  0x000011FD

			rq_first  76  //82

			overlays	off
			// shadows	SR3_Shadows  //** added in code
		}
	}

	target rt_output
	{
		pass render_quad
		{
			profiling_id "RTT 3 Final"
			identifier	33399

			load {  all dont_care  }
			store
			{
				colour	store
				depth	dont_care  //-
				stencil	dont_care
			}
			material Ogre/Copy/4xFP32
			input 0 rtt_final
		}
	}
}
